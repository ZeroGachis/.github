name: 'BuildImage'

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
      dockerfile_context:
        required: true
        type: string
      regitry_url:
        required: true
        type: string
      regitry_username:
        required: false
        type: string
      regitry_password:
        required: false
        type: string
      image_name:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      build-args:
        required: false
        type: string
    outputs: 
      image-url: 
        value: ${{ jobs.build-image.outputs.image-url }}
      image-version: 
        value: ${{ jobs.build-image.outputs.image-version }}

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    outputs:
      image-url: ${{ steps.meta.outputs.tags }}
      image-version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Github Packages
        if: contains(inputs.regitry_url,'ghcr')
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.regitry_url }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.regitry_url }}/${{ github.repository_owner	 }}/${{ inputs.image_name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build 
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ${{ inputs.dockerfile_context }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ${{ inputs.build-args }} 
            GITHUB_USER=oauth2
            GITHUB_TOKEN=${{ secrets.GH_ORG_READ_REPO_TOKEN }} 
