name: 'BuildImage'

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
      dockerfile_context:
        required: true
        type: string
      regitry_url:
        required: true
        type: string
      regitry_username:
        required: false
        type: string
      regitry_password:
        required: false
        type: string
      image_name:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      build-args:
        required: false
        type: string
      tailscale_enabled: 
        required: false
        type: boolean
        default: true
      vault_enabled: 
        required: false
        type: boolean
        default: true
      vault_url: 
        required: false
        type: string
      vault_github_actions_role:
        required: false 
        type: string
      environment_name:
        required: false
        type: string
    outputs: 
      image-url: 
        value: ${{ jobs.build-image.outputs.image-url }}
      image-version: 
        value: ${{ jobs.build-image.outputs.image-version }}


jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        id-token: write
        packages: write
    environment:
      name: ${{ inputs.environment_name }}
    env: 
      VAULT_URL: ${{ inputs.VAULT_URL || vars.VAULT_URL || vars.PULLREQUEST_VAULT_URL }}
      VAULT_GITHUB_ACTIONS_ROLE: ${{ inputs.vault_github_actions_role || vars.VAULT_GITHUB_ACTIONS_ROLE }}
    outputs:
      image-url: ${{ steps.meta.outputs.tags }}
      image-version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Tailscale
        if: inputs.tailscale_enabled || inputs.vault_enabled
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: ${{ vars.TAILSCALE_VERSION }}

      - name: Import Secrets
        if: inputs.vault_enabled
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ env.VAULT_URL }}
          role: ${{ env.VAULT_GITHUB_ACTIONS_ROLE }}
          method: jwt
          path: "github-actions"
          exportToken: true
          secrets: |
              secret/data/github-actions-common/github/read-repo-token USERNAME | GH_ORG_READ_REPO_USER ;
              secret/data/github-actions-common/github/read-repo-token PASSWORD | GH_ORG_READ_REPO_TOKEN ;

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Github Packages
        if: contains(inputs.regitry_url,'ghcr')
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.regitry_url }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.regitry_url }}/${{ github.repository_owner	 }}/${{ inputs.image_name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build 
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ inputs.dockerfile_context }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ${{ inputs.build-args }} 
            GITHUB_USER=${{ steps.secrets.outputs.GH_ORG_READ_REPO_USER }} 
            GITHUB_TOKEN=${{ steps.secrets.outputs.GH_ORG_READ_REPO_TOKEN }} 
