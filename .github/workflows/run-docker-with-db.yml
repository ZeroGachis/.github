name: 'Run-Docker-Command'

on:
  workflow_call:
    inputs:
      image_url:
        required: true
        type: string
      workdir:
        required: true
        type: string
      run_command:
        required: true
        type: string
      enable_test_report:
        required: false
        type: boolean
        default: false
      test_report_name:
        required: false
        type: string
      test_report_path:
        required: false
        type: string
      test_report_format:
        required: false
        type: string
      env_django_settings_module:
        required: false
        type: string
      aws_credentials_enabled: 
        required: false
        type: boolean
        default: false
      aws_account_id:
        required: false
        type: string
      aws_github_role_name:
        required: false
        type: string
        default: "github_oidc_readonly"
      checkout_enabled:
        required: false
        type: boolean
        default: true
      vault_enabled:
        required: false
        type: boolean
        default: true
      vault_url: 
        required: false
        type: string
      vault_github_actions_role:
        required: false
        type: string
      tailscale_enabled:
        required: false 
        type: boolean
        default: true  
      environment_name:
        required: false
        type: string

jobs:
  run-docker:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        id-token: write
        packages: read
        actions: write
        checks: write
    environment:
      name: ${{ inputs.environment_name }}
    container: 
      image: ${{ inputs.image_url }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }} 
      env:
        DJANGO_SETTINGS_MODULE: ${{ inputs.env_django_settings_module }}
        GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
        VAULT_URL: ${{ inputs.VAULT_URL || vars.VAULT_URL || vars.PULLREQUEST_VAULT_URL }}
        VAULT_GITHUB_ACTIONS_ROLE: ${{ inputs.vault_github_actions_role || vars.VAULT_GITHUB_ACTIONS_ROLE }}
        AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID || vars.AWS_ACCOUNT_ID || vars.PULL_REQUEST_AWS_ACCOUNT_ID }}
    services: 
      postgres:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        ports: 
        - 5432:5432

    steps:
      - name: Tailscale
        if: inputs.tailscale_enabled || inputs.vault_enabled
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: ${{ vars.TAILSCALE_VERSION }}

      - name: Import Secrets
        if: inputs.vault_enabled
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ env.VAULT_URL }}
          role: ${{ env.VAULT_GITHUB_ACTIONS_ROLE }}
          method: jwt
          path: "github-actions"
          exportToken: true
          secrets: |
            ${{ inputs.vault_secrets }}

      - name: Checkout
        if: ${{ inputs.checkout_enabled }}
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        if: inputs.aws_credentials_enabled
        uses: aws-actions/configure-aws-credentials@v4.0.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws_github_role_name }}

      - name: run-command
        working-directory: ${{ inputs.workdir }}
        env: 
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
        run: ${{ inputs.run_command }}

      - name: Test Report
        uses: dorny/test-reporter@6a1c2425d8b9d402c42e6128950575e8ba67ad38
        id: test-report               
        if: ${{ always() && inputs.enable_test_report == true }}
        with:
          name: '${{ inputs.test_report_name }}'         
          path: ${{ inputs.workdir }}/${{ inputs.test_report_path }}
          working-directory: ${{ inputs.workdir }}
          reporter: ${{ inputs.test_report_format }}
          max-annotations: 0
