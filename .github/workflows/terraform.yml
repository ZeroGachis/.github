name: "Terraform"

on:
  workflow_call:
    inputs:
      terraform_check_only:
        required: false
        type: boolean
        default: true
      environment_name:
        required: false
        type: string
      terraform_workspace:
        required: false
        type: string
        default: ${{ github.ref_name }}
      terraform_dir:
        required: false
        type: string
        default: '.'
      terraform_args:
        required: false
        type: string
      terraform_parallelism:
        required: false
        type: string
        default: "10"
      vault_url: 
        required: false
        type: string
      vault_github_actions_role:
        required: true 
        type: string
      vault_secrets:
        required: false 
        type: string
        default: |
          secret/data/github-actions-common/aws accessKey | TF_VAR_AWS_ACCESS_KEY_ID ;
          secret/data/github-actions-common/aws secretKey | TF_VAR_AWS_SECRET_ACCESS_KEY ;
      workdir: 
        required: false
        type: string
      terraform_substep_name:
        required: false
        type: string
        default: ""

jobs:
  terraform:
    permissions:
        contents: read
        id-token: write
        issues: read
        pull-requests: write
    name: "Terraform"
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment_name }}
    steps:
      - name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTH_KEY }}
          version: ${{ vars.TAILSCALE_VERSION }}

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ inputs.VAULT_URL || vars.VAULT_URL }}
          role: ${{ inputs.VAULT_GITHUB_ACTIONS_ROLE }}
          method: jwt
          path: "github-actions"
          exportToken: true
          secrets: |
            ${{ inputs.vault_secrets }}
            secret/data/github-actions-common/aws accessKey | AWS_ACCESS_KEY_ID ;
            secret/data/github-actions-common/aws secretKey | AWS_SECRET_ACCESS_KEY ;

      - uses: hashicorp/setup-terraform@v2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ steps.secrets.outputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ steps.secrets.outputs.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Terraform Format
        id: fmt
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform -chdir=${{ inputs.terraform_dir }} fmt -check

      - name: Terraform Init
        id: init
        working-directory: ${{ inputs.workdir || github.workspace }}
        run: terraform -chdir=${{ inputs.terraform_dir }} init

      - name: Terraform Validate
        id: validate
        working-directory: ${{ inputs.workdir || github.workspace }}
        run: terraform -chdir=${{ inputs.terraform_dir }} validate

      - name: Terraform Workspace
        id: workspace
        working-directory: ${{ inputs.workdir || github.workspace }}
        run: terraform -chdir=${{ inputs.terraform_dir }} workspace select ${{ inputs.terraform_workspace }} || terraform -chdir=${{ inputs.terraform_dir }} workspace new ${{ inputs.terraform_workspace }}

      - name: Terraform Plan
        id: plan
        working-directory: ${{ inputs.workdir || github.workspace }}
        run: terraform -chdir=${{ inputs.terraform_dir }} plan -out=tfplan -no-color -input=false ${{ inputs.terraform_args }}

      - name: Terraform Apply
        if: ${{ inputs.terraform_check_only == false }}
        working-directory: ${{ inputs.workdir || github.workspace }}
        run: terraform -chdir=${{ inputs.terraform_dir }} apply -auto-approve -input=false -parallelism=${{Â inputs.terraform_parallelism }} tfplan
