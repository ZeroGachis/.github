name: "Terraform"

on:
  workflow_call:
    inputs:
      workdir:
        required: false
        type: string
        default: ${{ github.workspace }} 
      terraform_check_only:
        required: false
        type: boolean
        default: true
      environment_name: 
        required: false
        type: string
      terraform_workspace:
        required: false
        type: string
        default: ${{ github.ref_name }}
      terraform_parallelism:
        required: false
        type: string
        default: "10"
      terraform_backend:
        required: false
        type: string
      terraform_args:
        required: false
        type: string
      aws_account_id:
          required: false
          type: string
      aws_region:
        required: false
        type: string
      aws_github_role_name:
        required: false
        type: string
        default: "github_oidc_readonly"
      vault_enabled:
        required: false
        type: boolean
        default: true
      vault_url: 
        required: false
        type: string
      vault_github_actions_role:
        required: false 
        type: string
      vault_secrets:
        required: false 
        type: string
      aws_secrets:
          required: false 
          type: string
      tailscale_enabled:
        required: false 
        type: boolean
        default: true
        
jobs:
  terraform:
    name: "Terraform"
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment_name }}
    env: 
      VAULT_URL: ${{ inputs.VAULT_URL || vars.VAULT_URL || vars.PULLREQUEST_VAULT_URL }}
      VAULT_GITHUB_ACTIONS_ROLE: ${{ inputs.vault_github_actions_role || vars.VAULT_GITHUB_ACTIONS_ROLE }}
      AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID || vars.AWS_ACCOUNT_ID || vars.PULL_REQUEST_AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ inputs.AWS_REGION || vars.AWS_REGION || vars.AWS_DEFAULT_REGION }}
      AWS_DEFAULT_SECRETS: |
        DD_API_KEY,datadog/${{ inputs.AWS_ACCOUNT_ID || vars.AWS_ACCOUNT_ID || vars.PULL_REQUEST_AWS_ACCOUNT_ID }}/technical-account/api-key
        DD_APP_KEY,datadog/${{ inputs.AWS_ACCOUNT_ID || vars.AWS_ACCOUNT_ID || vars.PULL_REQUEST_AWS_ACCOUNT_ID }}/technical-account/app-key
      TERRAFORM_DEFAULT_BACKEND: tfstate-${{ inputs.AWS_ACCOUNT_ID || vars.AWS_ACCOUNT_ID || vars.PULL_REQUEST_AWS_ACCOUNT_ID }}

    steps:
      - name: Tailscale
        if: inputs.tailscale_enabled || inputs.vault_enabled
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: ${{ vars.TAILSCALE_VERSION }}

      - name: Import Secrets
        if: inputs.vault_enabled
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ env.VAULT_URL }}
          role: ${{ env.VAULT_GITHUB_ACTIONS_ROLE }}
          method: jwt
          path: "github-actions"
          exportToken: true
          secrets: |
            ${{ inputs.vault_secrets }}

      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws_github_role_name }}

      - name: Get tiers Tools credentials
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            ${{ inputs.aws_secrets || env.AWS_DEFAULT_SECRETS }}

      - name: Terraform Format
        id: fmt
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform init -backend-config="bucket=${{ inputs.terraform_backend || env.TERRAFORM_DEFAULT_BACKEND }}"

      - name: Terraform Validate
        id: validate
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform validate

      - name: Terraform Workspace
        id: workspace
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform workspace select ${{ inputs.terraform_workspace }} || terraform workspace new ${{ inputs.terraform_workspace }}
      
      - name: Terraform Plan
        id: plan
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform plan -out=tfplan -no-color -input=false ${{ inputs.terraform_args }}

      - name: Terraform Apply
        if: ${{ inputs.terraform_check_only == false }}
        working-directory: ${{ inputs.workdir || github.workspace	}}
        run: terraform apply -auto-approve -input=false -parallelism=${{Â inputs.terraform_parallelism }} tfplan
