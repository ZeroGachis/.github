name: "Push-Image-GHCR-To-ECR"

on:
  workflow_call:
    inputs:
      image_url:
        required: true
        type: string
      ecr_url:
        required: false
        type: string
      image_name:
        required: true
        type: string
      releasetag:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      aws_account_id:
        required: false
        type: string
      aws_region:
        required: false
        type: string
      aws_github_role_name:
        required: false
        type: string
        default: "github_oidc_readonly"

jobs:
  push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: read
    environment:
      name: ${{ inputs.environment_name }}
    env:
      AWS_ACCOUNT_ID: ${{ inputs.AWS_ACCOUNT_ID || vars.AWS_ACCOUNT_ID || vars.PULL_REQUEST_AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ inputs.AWS_REGION || vars.AWS_REGION || vars.AWS_DEFAULT_REGION }}
      steps:
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        id: creds
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws_github_role_name }}
          output-credentials: true

      - name: Login to ECR
        uses: docker/login-action@v3
        env:
          ECR_DEFAULT_URL: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        with:
          registry: ${{ inputs.ecr_url || env.ECR_DEFAULT_URL }}

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Manipulate Image
        env:
          ECR_DEFAULT_URL: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        run: |
          docker pull ${{ inputs.image_url}} 
          docker tag ${{ inputs.image_url}} ${{ inputs.ecr_url || env.ECR_DEFAULT_URL }}/${{ inputs.environment_name }}/${{ inputs.image_name }}:${{ inputs.releasetag }}
          docker push ${{  inputs.ecr_url || env.ECR_DEFAULT_URL }}/${{ inputs.environment_name }}/${{ inputs.image_name }}:${{ inputs.releasetag }}
